export default {
    // 登录界面
    auth: {
        loginToOpenAgent: "Login to OpenAgent",
        registerOpenAgentAccount: "Register OpenAgent Account",
        verifyEmail: "Verify Email",
        resetPassword: "Reset Password",
        loginWithGoogle: "Login with Google",
        registerWithGoogle: "Register with Google",
        login: "Login",
        register: "Register",
        logOut: "Logout",
        forgotPassword: "Forgot Password",
        resetPasswordButton: "Reset Password",
        backToLogin: "Back to Login",
        verifyEmailButton: "Verify Email",
        resendCode: "Resend Code",
        email: "Email",
        password: "Password",
        fullname: "Fullname",
        codeSentTo: "Code Sent To",
        pleaseInputEmail: "Please Input Email",
        pleaseInputValidEmail: "Please Input Valid Email",
        pleaseInputPassword: "Please Input Password",
        pleaseInputFullname: "Please Input Fullname",
        pleaseInputVerifyCode: "Please Input Verify Code",
        pleaseInputNewPassword: "Please Input New Password",
        pleaseConfirmPassword: "Please Confirm Password",
        pleaseInput6DigitCode: "Please Input 6-digit Code",
        or: "or",
        noAccount: "No Account",
        haveAccount: "Have Account",
        notReceivedCode: "Not Received Code",
        codeSent: "Code Sent",
        registrationSuccessful: "Registration successful, please login",
        verificationCodeError: "Verification code error, please try again",
        doNotSendFrequently: "Please do not send verification code frequently",
        codeResent: "Verification code has been resent",
        loginSuccessful: "Login successful",
        loginFailed: "Login failed, please check email and password",
        fillCompleteInfo: "Please fill in complete registration information",
        pleaseEnterValidEmail: "Please enter a valid email address",
        passwordTooShort: "Password length cannot be less than 6 characters",
        registrationFailed: "Registration failed, please check input",
        pleaseInputCode: "Please enter verification code",
        passwordsDoNotMatch: "Confirm password does not match",
        passwordResetSuccessful: "Password reset successful, please login",
        passwordResetFailed: "Password reset failed, please check input",
        googleLoginFailed: "Google login redirect failed, please try again later",
        appleLoginInProgress: "Apple login functionality is under development",
        googleRegisterInProgress: "Google registration functionality is under development",
        appleRegisterInProgress: "Apple registration functionality is under development",
        verifyingGoogleLogin: "Verifying Google login"
    },
    //主界面
    lemon: {
        // 欢迎界面
        welcome: {
            greeting: "Hello, {username}",
            question: "What can I do for you?",
            tabs: {
                featured: "Featured",
                research: "Research",
                lifestyle: "Lifestyle",
                dataAnalysis: "Data Analysis",
                education: "Education",
                productivity: "Productivity",
                other: "Others"
            },
            placeholder: "What can I do for you?",
            communityNote: "All tasks and websites showcased in the community are voluntarily shared by users. The platform will not display any content without user consent."
        },
        //  聊天头部
        chatHeader: {
            share: "Share",
            viewAllFiles: "View all files in this task",
            moreOptions: "More options",
            rename: "Rename",
            editTitle: "Edit Title",
            enterNewTitle: "Enter new title",
            cancel: "Cancel",
            confirm: "Confirm",
            favorite: "Add to favorites",
            unfavorite: "Remove from favorites"
        },
        //  主消息
        message: {
            runCommand: "Execute bash command",
            readFile: "Read file",
            editFile: "Edit file",
            browsing: "Browsing",
            searching: "Searching",
            minutesAgo: "minutes ago",
            secondsAgo: "seconds ago",
            hoursAgo: "hours ago",
            daysAgo: "days ago",
            monthsAgo: "months ago",
            yearsAgo: "years ago",
            copySuccess: "Copy successful",
            copyError: "Copy failed",
            botInitialResponse: "Hello! I have received your request, and I am analyzing the issue. Please wait a moment.",
            botInitialPlan: "Developing a plan"
        },
        // 侧边栏
        sidebar: {
            newTask: "New Task",
            shortcutKey: "T",
            moreOptions: "More Options",
            share: "Share",
            rename: "Rename",
            collect: "Collect",
            delete: "Delete",
            confirmDelete: "Confirm Delete",
            deleteConfirmation: "Are you sure you want to delete this conversation?",
            cancel: "Cancel",
            confirm: "Confirm",
            noChats: "Create a new task to start",
            searchPlaceholder: "Search tasks..."
        },
        // 文件资源查看
        fileExplorer: {
            allFilesInTask: "All Files in This Task",
            noContent: "No Content",
            preview: "Preview",
            locateInChat: "Locate in Chat",
            download: "Download",
            saveToGoogleDrive: "Save to Google Drive",
            selectAll: "Select All",
            cancel: "Cancel",
            batchDownload: "Batch Download",
            fileTypes: {
                all: "All",
                document: "Document",
                image: "Image",
                codeFile: "Code File",
                link: "Link"
            },
            timeGroups: {
                today: "Today",
                yesterday: "Yesterday",
                earlier: "Earlier"
            },
            weekdays: {
                sunday: "Sunday",
                monday: "Monday",
                tuesday: "Tuesday",
                wednesday: "Wednesday",
                thursday: "Thursday",
                friday: "Friday",
                saturday: "Saturday"
            }
        },
        fullPreview: {
            download: "Download",
            exportToPDF: "Export to PDF",
            saveToGoogleDrive: "Save to Google Drive",
            maximize: "Maximize",
            minimize: "Minimize",
            previous: "Previous",
            next: "Next",
            copy: "Copy",
            code: "Code",
            preview: "Preview",
            close: "Close",
            fileTypePresentation: "Presentation",
            cannotPreviewFormat: "This format cannot be previewed.",
            downloadToView: "Please download the file to view its content.",
            noContentToCopy: "No content to copy.",
            clipboardNotSupported: "Clipboard operation not supported in this browser. Please copy manually.",
            contentCopied: "Content copied successfully.",
            copyFailed: "Copy failed. Please try again or copy manually.",
            exportPDFPending: "Export to PDF successful.",
            saveToGoogleDrivePending: "Save to Google Drive functionality is pending implementation."
        },
        preview: {
            title: "Lemon's Computer",
            openVsCode: "VS Code",
            using: "Lemon is using",
            performing: "Performing",
            previousStep: "Previous Step",
            nextStep: "Next Step",
            realtime: "Realtime",
            waitingForDevelopment: "Waiting for development...",
            browser: "Browser",
            browsing: "Browsing",
            editor: "Editor",
            editingFile: "Editing File",
            terminal: "Terminal",
            executingCommand: "Executing Command",
            readingFile: "Reading File",
            search: "Search",
            searching: "Searching"
        }
        //
    },
    //设置界面
    setting: {
        back: "Back",
        prevStep: "Previous Step",
        nextStep: "Next Step",
        doneStep: "Done",
        settingModel: "Setting Model",
        settingModelTipsOne: "Click setting model, jump to setting model page",
        // 侧边菜单栏
        menu: {
            basic: 'Basic Settings',
            defaultModel: 'Default Model',
            modelService: 'Model Service',
            searchService: 'Search Service',
            mcpService: 'MCP Service',
            experience: 'Experience'
        },
        basic: {
            title: "Basic Settings",
            langTitle: "Language Settings",
            languagePreference: "Language Preference",
            lang: {
                en: "English",
                zh: "Chinese (Simplified)",
                de: "German",
                es: "Spanish",
                fr: "French",
                ja: "Japanese",
                kr: "Korean",
                tr: "Turkish",
                pt: "Portuguese",
                tw: "Chinese (Traditional)",
                vi: "Vietnamese"
            }
        },
        // 模型服务
        modelService: {
            modelService: "Model Service",
            modelServiceTipsOne: "Step 1: Select Model Service Provider",
            modelServiceTipsTwo: "Step 2: Set Input API KEY",
            modelServiceTipsThree: "Step 3: Enable Model Service",
            title: "Model Service",
            searchPlaceholder: "Search Platform",
            modelPlatform: "Models Platform",
            defaultPlatform: "Default System Platform",
            statusOn: "ON",
            addPlatform: "Add",
            save: "Save",
            defaultPlatformDescription: "Default platform models are provided by the system, no configuration required",
            apiKey: "API Key",
            apiKeyPlaceholder: "Please enter API Key",
            ak: "Access Key",
            akPlaceholder: "Please enter Access Key",
            getApiKey: "Click here to obtain the key",
            check: "Check",
            selectCheckModel: "Please select the check model",
            apiAddress: "API Address",
            apiAddressPlaceholder: "Please enter API Address",
            apiAddressTip: "/ ending ignores v1 version, # ending forces the use of the input address",
            activateTime: "Activation Time",
            activateTimePlaceholder: "Please enter activation time (mins)",
            models: "Models",
            ungrouped: "Ungrouped",
            viewOfficialDocs: "View the platform's official documentation for more information",
            add: "Add",
            confirmDeleteModel: "Are you sure you want to delete this model?",
            deleteModelSuccess: "Model deleted successfully",
            deleteModelFailed: "Failed to delete model",
            addModelSuccess: "Model added successfully",
            updateModelSuccess: "Model updated successfully",
            copySuccess: "Name copied",
            typeVision: "Vision",
            typeNetwork: "Network",
            typeEmbed: "Embed",
            typeReasoning: "Reasoning",
            typeTool: "Tool",
            addProvider: "Add Provider",
            confirm: "Confirm",
            cancel: "Cancel",
            platformLogo: "Platform Logo",
            providerName: "Provider Name",
            namePlaceholder: "Name",
            providerType: "Provider Type",
            typePlaceholder: "Type",
            enterName: "Please enter name",
            selectType: "Please select type",
            addPlatformSuccess: "Platform added successfully",
            formValidationFailed: "Form validation failed",
            addModel: "Add Model",
            editModel: "Edit Model",
            modelId: "Model ID",
            modelIdPlaceholder: "Please enter model ID",
            modelName: "Model Name",
            modelNamePlaceholder: "Model name",
            groupName: "Group Name",
            groupNamePlaceholder: "Group name",
            modelTypes: "Model Types",
            enterModelId: "Please enter model ID",
            enterModelName: "Please enter model name",
            enterGroupName: "Please enter group name",
            selectModelType: "Please select at least one model type",
            editProvider: "Edit Provider",
            updatePlatformSuccess: "Platform updated successfully",
            deletePlatformSuccess: "Platform deleted successfully",
            deletePlatformFailed: "Failed to delete platform",
            saveSuccess: "Saved successfully",
            saveFailed: "Save failed",
            platforms:{
                Anthropic: "Anthropic",
                ModelScope: "ModelScope",
                Gemini: "Gemini",
                OpenAI: "OpenAI",
                Ollama: "Ollama",
                qiniu: "Qiniu",
                WanJieData:  "WanJieData",
                PPIO: "PPIO",
                QianFan: "QianFan",
                SiliconFlow: "SiliconFlow",
                Volcengine: "Volcengine",
                DeepSeek: "DeepSeek",
                Bailian: "Bailian",
                OpenRouter: "OpenRouter",
                LMStudio: "LM Studio",
            }
        },
        //默认模型
        defaultModel: {
            defaultModel: "Setting Default Model",
            defaultModelTipsOne: "Click default model, jump to default model page",
            topicNamingModel: "Topic Naming Model",
            topicNamingModelTips: "The model used for automatically naming new topics",
            emptymodelTips: "Please enable the relevant platform in the model service",
            DefaultModelSetting: "Default Model Setting",
            defaultAssistantModel: "Default Assistant Model",
            assistantModelTips: "The model used when creating an assistant",
            translationModel: "Translation Model",
            translationModelTips: "The model used for translation services",
            saveSuccess: "Settings saved successfully",
            browserUseModel: "Browser Use Model",
            browserUseModelTips: "The model used for browser use services, must support tools and function calls",
            // assistant settings
            assistantSettings: "Assistant Settings",
            assistantName: "Assistant Name",
            assistantNamePlaceholder: "Please enter assistant name",
            prompt: "Prompt",
            modelParameters: "Model Parameters",
            temperature: "Temperature",
            topP: "Top P",
            maxTokens: "Max Tokens",
            enableLengthLimit: "Enable Length Limit",
            //  topic naming settings
            topicNamingSettings: "Topic Naming Settings",
            topicAutoNaming: "Topic Auto-Naming",
            topicNamingPrompt: "Topic Naming Prompt",
            // translation settings
            translationSettings: "Translation Settings",
            confirm: "Confirm",
            cancel: "Cancel",
            translationPrompt: "Translation Prompt",
            promptPlaceholder: "Please enter prompt"
        },
        // 搜索服务
        searchService: {
            searchService: "Setting Search Service",
            searchServiceTipsOne: "Click search service, jump to search service page",
            searchEngineTipsOne: "Step 1: Select Search Service Provider",
            searchEngineTipsTwo: "Step 2: Set Input API KEY",
            title: "Search Service",

            blacklistSubscription: "Blacklist Subscription",
            addSubscription: "Add Subscription",
            updateNow: "Update Now",
            deleteSubscription: "Delete Subscription",
            confirm: "Confirm",
            cancel: "Cancel",
            subscriptionUrl: "Subscription URL",
            subscriptionUrlPlaceholder: "https://example/abcd",
            subscriptionName: "Subscription Name",
            subscriptionNamePlaceholder: "Alternative name used when the downloaded subscription source has no name",
            name: "Name",
            url: "URL",
            addSubscriptionSuccess: "Subscription added successfully",
            deleteSubscriptionSuccess: "Subscription deleted successfully",
            deleteSubscriptionFailed: "Failed to delete subscription",
            saveConfigSuccess: "Configuration saved successfully",
            saveConfigFailed: "Failed to save configuration",
            loadConfigFailed: "Failed to load configuration",
            formValidationFailed: "Form validation failed",
            enterSubscriptionUrl: "Please enter subscription URL",
            invalidUrl: "Please enter a valid URL",
            enterSubscriptionName: "Please enter subscription name",
            noSubscriptionSelected: "No subscription selected",
            searchProvider: "Search Provider",
            generalSettings: "General Settings",
            includeDate: "Include Date",
            includeServer: "Include Server",
            searchEnhancement: "Search Enhancement",
            searchResultCount: "Search Result Count",
            default: "Default",
            blacklist: "Blacklist",
            blacklistTips: "Enter domains to exclude from search results",
            blacklistPlaceholder: "Enter one domain per line",
            save: "Save",
            apiTips: "API Configuration",
            apiKeyPlaceholder: "Enter your API key",
            apiKey: "API Key",
            apiAddress: "API Address",
            tavilyName: "Tavily (Key)",
            baiduName: "Baidu (Free)",
            bingName: "Bing (Free)",
            couldswayName: "Cloudsway (Key)",
            accessKey:  "Access Key",
            endPoint: "EndPoint",
            endpointPlaceholder: "Enter your EndPoint",
            accessKeyPlaceholder: "Enter your Access Key",
            saveBlacklistSuccess: "Blacklist saved successfully",
            saveBlacklistFailed: "Failed to save blacklist"
        },
        // MCP服务
        mcpService: {
            title: "MCP Service",
            addServer: "Add Server",
            save: "Save",
            name: "Name",
            namePlaceholder: "Please enter name",
            description: "Description",
            descriptionPlaceholder: "Description",
            type: "Type",
            stdio: "Standard Input/Output (stdio)",
            sse: "Server-Sent Events (sse)",
            streamableHttp: "Streamable HTTP (streamableHttp)",
            command: "Command",
            commandPlaceholder: "uvx or npx",
            packageSource: "Package Source",
            default: "Default",
            taobaoNpmMirror: "Taobao NPM Mirror",
            tsinghua: "Tsinghua University",
            aliyun: "Aliyun",
            ustc: "University of Science and Technology of China",
            huaweiCloud: "Huawei Cloud",
            tencentCloud: "Tencent Cloud",
            args: "Arguments",
            argsPlaceholder: "arg1\narg2",
            env: "Environment Variables",
            envPlaceholder: "KEY1=VALUE1\nKEY2=VALUE2",
            mcpServer: "MCP Server"
        },
        experience: {
            title: "Experience Library",
            addExperience: "Add Experience",
            editExperience: "Edit Experience",
            close: "Close",
            titleLabel: "Title",
            titlePlaceholder: "Experience Title",
            goalLabel: "Goal",
            goalPlaceholder: "The goal of this experience",
            contentLabel: "Content",
            contentPlaceholder: "Experience Content",
            statusLabel: "Status",
            enabled: "Enabled",
            disabled: "Disabled",
            cancel: "Cancel",
            save: "Save",
            delete: "Delete",
            undoChanges: "Undo Changes",
            deleteExperience: "Delete Experience",
            deleteConfirm: "Are you sure you want to delete this experience?",
            totalExperience: "Total {count} experiences",
            tableTitle: "Title",
            tableContent: "Content",
            tableCreatedAt: "Created At",
            tableStatus: "Status",
            tableOperation: "Operation",
            filterAll: "All",
            deleteSuccess: "Deleted successfully",
            deleteFailed: "Delete failed",
            createSuccess: "Experience added successfully",
            createFailed: "Failed to add experience",
            updateSuccess: "Updated successfully",
            updateFailed: "Update failed",
            updateFailedDataNotExist: "Update failed, data does not exist",
            getDataError: "Error getting data",
            detect: "Intent Recognition",
            plan: "Task Planning",
            action: "Task Execution",
            sunday: "Sunday",
            monday: "Monday",
            tuesday: "Tuesday",
            wednesday: "Wednesday",
            thursday: "Thursday",
            friday: "Friday",
            saturday: "Saturday",
            earlier: "Earlier",
        },
    },
    thinking: "Thinking",
    task_error: "Task Error",
    stop_task: "Task Stopped",
    jump_to_result: "Jump to Result",
    replay: "Replay",
    task_finished: "Task Finished",
    task_playing: "Task Playing",
    click_here_to_go_to_settings:"Click here to go to settings"
}